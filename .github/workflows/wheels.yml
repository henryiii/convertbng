name: Build

on: [push, pull_request]

jobs:
  get_latest_lib_tag:
    name: Get latest Rust lib tag
    runs-on: ubuntu-latest
    outputs:
      repo: ${{ env.rustlib_repo }}
      tag: ${{ steps.latest-tag.outputs.tag}}
    steps:
      - id: set_rustlib_repo
        run: |
          echo "rustlib_repo=lonlat_bng" >> $GITHUB_ENV
      - id: latest-tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: urschrei/lonlat_bng  # The repository to scan.
          releases-only: true  # We know that all relevant tags have a GitHub release for them.
      - run: echo "Lib version ${{ steps.latest-tag.outputs.tag }}"


  get_rust_lib:
    name: Get latest release of Rust lib
    needs: get_latest_lib_tag
    runs-on: ubuntu-latest
    steps:
      uses: stryd/fetch-release-asset@v1
      with:
        access_token: ${{ secrets.GH_TOKEN }}
        repo: urschrei/${{ needs.get_latest_lib_tag.outputs.repo }}
        version: tags/${{ needs.get_latest_lib_tag.outputs.tag }}
        asset_name:   |
                   if [ "$RUNNER_OS" == "Linux" ]; then
                        ${{ needs.get_latest_lib_tag.outputs.repo }}-${{ needs.get_latest_lib_tag.outputs.tag }}-x86_64-unknown-linux-gnu.tar.gz
                   elif [ "$RUNNER_OS" == "Windows" ]; then
                        ${{ needs.get_latest_lib_tag.outputs.repo }}-${{ needs.get_latest_lib_tag.outputs.tag }}-x86_64-pc-windows-msvc.zip
                   else
                        ${{ needs.get_latest_lib_tag.outputs.repo }}-${{ needs.get_latest_lib_tag.outputs.tag }}-x86_64-apple-darwin.tar.gz
                   fi
        save_as: convertbng/rustlib.zip

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: get_rust_lib
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-10.15]

    steps:
      - uses: actions/checkout@v2

      # Used to host cibuildwheel
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel

        run:   |
               python -m pip install cibuildwheel==1.11.1.post1
               if [ "$RUNNER_OS" == "Linux" ]; then
                    tar -xvf convertbng/rustlib.zip
               elif [ "$RUNNER_OS" == "Windows" ]; then
                    7z x convertbng/rustlib.zip
               else
                    tar -xvf convertbng/rustlib.zip
               fi

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        # to supply options, put them in 'env', like:
        env:
          CIBW_TEST_REQUIRES: setuptools nose numpy cython
          CIBW_BUILD: cp37-macosx_x86_64 cp37-win_amd64 cp37-manylinux_x86_64 cp38-macosx_x86_64 cp38-win_amd64 cp38-manylinux_x86_64 cp39-macosx_x86_64 cp39-macosx_arm64 cp39-win_amd64 cp39-manylinux_x86_64
          CIBW_TEST_COMMAND: nosetests

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
